@page "/orders"
@using BeanRider.Logic
@using BeanRider.Model.Contracts.Data
@using BeanRider.Model.DomainModel
@inject IRepository repo;
@inject IOrderService orderService;

<h3>Orders</h3>

@if (orders == null)
{
    <p>Loading....</p>
}
else
{

    <table class="table">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>Order Date</th>
                <th>Customer Name</th>
                <th>Order items count</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
                <tr>
                    <td>@order.Id</td>
                    <td>@order.Time</td>
                    <td>@order.Customer.Name</td>
                    <td>@order.Items.Sum(x => x.Amount) Dinge</td>
                </tr>
            }
        </tbody>
    </table>

}

@code {

    IEnumerable<Order> orders;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        orders = repo.GetAll<Order>();
    }
}
